#include<iostream>
#include"brass.h"

using namespace std;

Brass::Brass(const string &name, long ac, double bal)
{
	fullName = name;
	account = ac;
	balance = bal;
}

void Brass::Deposit(double amt)
{
	if (amt < 0)
		cout << "Negative deposit not allowed;"
		<< "deposit is cancelled.\n";
	else
		balance += amt;
}

void Brass::Withdraw(double amt)
{
	if (amt < 0)
		cout << "Withdraw amount must be positive; "
			 << "withdraw canceled.\n";
	else if (amt <= balance)
		balance -= amt;
	else
		cout << "Withdraw amount of $" << amt
			 << " excessds your balance.\n"
			 << "Withdraw canceled.\n";
}

double Brass::Balance() const
{
	return balance;
}

void Brass::ViewAcct() const
{
	cout << "Client: " << fullName << endl;
	cout << "Account number: " << account << endl;
	cout << "Balance: $" << balance << endl;
}

BrassPlus::BrassPlus(const string &name, long ac,
	double bal, double ml, double r) : Brass(name, ac, bal)
{
	maxLoan = ml;
	rate = r;
	owesBank = 0.0;
}

BrassPlus::BrassPlus(const Brass &st, double ml,
	double r) :Brass(st)
{
	maxLoan = ml;
	rate = r;
	owesBank = 0.0;
}

void BrassPlus::ViewAcct() const
{
	Brass::ViewAcct();
	cout << "Maxmum loan: $" << maxLoan << endl;
	cout << "Owed to bank: $" << owesBank << endl;
	cout << "Loan Rate: " << 100 * rate << "%\n";
}

void BrassPlus::Withdraw(double amt)
{
	double bal = Balance();
	if (amt <= bal)
		Brass::Withdraw(amt);
	else if (amt < bal + maxLoan - owesBank) {
		double advance = amt - bal;
		owesBank += advance*(1.0 + rate);
		cout << "Bank advance: $" << advance << endl;
		cout << "Finance charge: $" << advance*rate << endl;
		Deposit(advance);
		Brass::Withdraw(amt);
	}
	else
		cout << "Credit limit exceeded. Transaction cancelled.\n";
}
