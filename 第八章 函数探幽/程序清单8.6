//将引用用于结构
#include<iostream>
#include<string>

using namespace std;

struct free_throws
{
	string name;
	int made;
	int attempts;
	double percent;
};

void display(const free_throws &);
void set_off(free_throws &);
free_throws &accumulate(free_throws &, const free_throws &);

void main()
{
	free_throws one = { "xcwsa",13,14 };
	free_throws two = { "ccsa",10,16 };
	free_throws three = { "cacas",7,9 };
	free_throws four = { "cwcved",5,9 };
	free_throws five = { "dce",6,14 };
	free_throws team = { "csava",0,0 };

	set_off(one);
	display(one);
	accumulate(team, one);
	display(team);
	display(accumulate(team, two));
	accumulate(accumulate(team, three), four);
	display(team);
}

void display(const free_throws & ft)
{
	cout << "Name: " << ft.name << "\n";
	cout << "Made: " << ft.made;
	cout << "\tAttempt: " << ft.attempts;
	cout << "\tPercent: " << ft.percent << endl;
}

void set_off(free_throws & ft)
{
	if (ft.attempts != 0)
		ft.percent = 100.0f*float(ft.made) / float(ft.attempts);
	else
		ft.percent = 0;
}

free_throws &accumulate(free_throws &target, const free_throws &source)
{
	target.attempts += source.attempts;
	target.made += source.made;
	set_off(target);
	return target;
}
